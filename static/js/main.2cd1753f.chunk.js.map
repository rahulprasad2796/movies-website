{"version":3,"sources":["components/cards.js","App.js","reportWebVitals.js","index.js"],"names":["Card","Title","Poster","useState","title","setTitle","changeState","className","onMouseEnter","onMouseLeave","src","alt","App","props","handleSearch","e","filter","state","filterProducts","v","toLowerCase","includes","target","value","setState","products","loader","this","type","placeholder","onChange","length","map","i","key","axios","get","then","res","data","Search","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAceA,EAXF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAClB,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAc,WAChBD,GAAUD,IAEd,OAAS,sBAAKG,UAAU,QAAQC,aAAcF,EAAaG,aAAcH,EAAhE,UACL,qBAAKI,IAAKR,EAAQS,IAAKV,IACtBG,EAAQ,4BAAIH,IAAa,O,yBCmCnBW,E,kDAvCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAQRC,aAAe,SAACC,GAEd,IAAMC,EAAS,EAAKC,MAAMC,eAAeF,QAAO,SAAAG,GAAC,OAAIA,EAAElB,MAAMmB,cAAcC,SAASN,EAAEO,OAAOC,UAC7F,EAAKC,SAAS,CAACC,SAAUT,KAVzB,EAAKC,MAAQ,CACXQ,SAAU,GACVC,QAAQ,EACRR,eAAgB,IALF,E,0CAelB,WACE,OACE,8BACGS,KAAKV,MAAMS,OAAU,4CAAwB,gCAC5C,uBAAOE,KAAK,OAAOC,YAAY,SAAUC,SAAUH,KAAKb,eAE1D,wCAH8C,IAG9B,uBAEhB,qBAAKP,UAAU,eAAf,SACGoB,KAAKV,MAAMQ,SAASM,OAASJ,KAAKV,MAAMQ,SAASO,KAAI,SAACb,EAAGc,GAAJ,OAAU,wBAAC,EAAD,2BAAUd,GAAV,IAAae,IAAKD,QAAS,yD,+BAOnG,WAAqB,IAAD,OAClBE,IAAMC,IAAI,kDACTC,MAAK,SAAAC,GACJ,EAAKd,SAAS,CAACC,SAAUa,EAAIC,KAAKC,OAAQtB,eAAgBoB,EAAIC,KAAKC,OAAQd,QAAO,W,GAnCtEe,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2cd1753f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './cards.css';\r\n\r\nconst Card = ({Title, Poster}) => {\r\n    const [title, setTitle] = useState(false);\r\n    const changeState = () => { //mouse hover affect is set on each call t/f, shows title or not\r\n        setTitle(!title);\r\n    }\r\n    return ( <div className=\"cards\" onMouseEnter={changeState} onMouseLeave={changeState}>\r\n        <img src={Poster} alt={Title}/>\r\n        {title ? <p>{Title}</p> : \"\"}\r\n    </div> );\r\n}\r\n \r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from './components/cards';\r\nimport \"./App.css\";\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      loader: true,\r\n      filterProducts: [],\r\n    }\r\n  }\r\n\r\n  handleSearch = (e) => { //remember arrow\r\n    //filters from the api data and sets that value to products\r\n    const filter = this.state.filterProducts.filter(v => v.Title.toLowerCase().includes(e.target.value));\r\n    this.setState({products: filter});\r\n  }\r\n\r\n  render() { //loader is t/f while api call, if no data found on search shows no data found\r\n    return (\r\n      <div>\r\n        {this.state.loader ? (<h1>Loading...</h1>) : (<div>\r\n          <input type=\"text\" placeholder=\"Search\"  onChange={this.handleSearch}>\r\n        </input>\r\n        <h2>Movies</h2> <hr/>\r\n\r\n        <div className=\"card-wrapper\">\r\n          {this.state.products.length ? this.state.products.map((v, i) => <Card {...v} key={i} />) : <h2>Data not found</h2>}\r\n        </div>\r\n        </div>) }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() { //api call\r\n    axios.get(\"https://www.omdbapi.com/?apikey=45f0782a&s=war\")\r\n    .then(res => {\r\n      this.setState({products: res.data.Search, filterProducts: res.data.Search, loader:false});\r\n    })\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}